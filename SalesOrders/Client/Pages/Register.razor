@page "/register"
@layout LoginLayout
@using SalesOrders.Client.Service.AuthService
@using SalesOrders.Shared.Users.Models
@inject IAuthService AuthService
@inject ISnackbar Snackbar
@inject NavigationManager Navigation

<PageTitle>Register</PageTitle>

<!-- Centered registration container -->
<div class="d-flex justify-content-center align-items-center vh-100">
    <div class="card p-4 shadow" style="width: 400px;">
        <h3 class="text-center">Register</h3>

        <EditForm Model="user" OnValidSubmit="HandleRegistration">
            <DataAnnotationsValidator />

            <div class="mb-3">
                <label for="email">Email</label>
                <InputText id="email" @bind-Value="user.email" class="form-control" />
                <ValidationMessage For="@(() => user.email)" />
            </div>

            <div class="mb-3">
                <label for="password">Password</label>
                <InputText id="password" @bind-Value="user.password" class="form-control" type="password" />
                <ValidationMessage For="@(() => user.password)" />
            </div>

            <div class="mb-3">
                <label for="confirmPassword">Confirm Password</label>
                <InputText id="confirmPassword" @bind-Value="user.confirmPassword" class="form-control" type="password" />
                <ValidationMessage For="@(() => user.confirmPassword)" />
            </div>

            <button type="submit" class="btn btn-primary w-100">Register</button>

            <!-- Login link -->
            <div class="text-center mt-3">
                <span>Already have an account? <a href="/login">Login now</a></span>
            </div>
        </EditForm>

        <!-- Message display -->
        <div class="@messageCssClass text-center text-danger mt-2">
            <span>@message</span>
        </div>
    </div>
</div>

@* <EditForm Model="user" OnValidSubmit="HandleRegistration">

    <DataAnnotationsValidator />

    <div class="mb-3">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="user.email" class="form-control"></InputText>
        <ValidationMessage For="@(() => user.email)" />
    </div>

    <div class="mb-3">
        <label for="password">Passwprd</label>
        <InputText id="password" @bind-Value="user.password" class="form-control" type="password" />
        <ValidationMessage For="@(() => user.password)" />
    </div>

    <div class="mb-3">
        <label for="confirmPassword">Confirm Password</label>
        <InputText id="confirmPassword" @bind-Value="user.confirmPassword" class="form-control" type="password" />
        <ValidationMessage For="@(() => user.confirmPassword)" />
    </div>

    <button type="submit" class="btn btn-primary">Register</button>
    <div class="mt-3">
        <span>Already have an account? <a href="/login">Login now</a></span>
    </div>
    <div class="@messageCssClass">
        <span>@message</span>
    </div>

</EditForm> *@


@code {
    UserRegister user = new UserRegister();
    string message = string.Empty;
    string messageCssClass = string.Empty;

    async Task HandleRegistration()
    {
        var result = await AuthService.Register(user);
        message = result.Message;
        if (result.Success)
        {
            Snackbar.Add($"Successfully added new user. ", severity: Severity.Success);
            Navigation.NavigateTo("/login"); //redirect to login page
        }
        else
        {
            Snackbar.Add($"Error adding new user", severity: Severity.Error);
        }
        
    }
}
